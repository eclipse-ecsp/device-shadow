#################################################################################
# /********************************************************************************
#
#  * Copyright (c) 2023-24 Harman International
#
#  *
#
#  * Licensed under the Apache License, Version 2.0 (the "License");
#
#  * you may not use this file except in compliance with the License.
#
#  * You may obtain a copy of the License at
#
#  *
#
#  *  http://www.apache.org/licenses/LICENSE-2.0
#
#  *?????
#
#  * Unless required by applicable law or agreed to in writing, software
#
#  * distributed under the License is distributed on an "AS IS" BASIS,
#
#  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#  * See the License for the specific language governing permissions and
#
#  * limitations under the License.
#
#  *
#
#  * SPDX-License-Identifier: Apache-2.0
#
#  ********************************************************************************/
#################################################################################

api.registry.enabled=false
api.security.enabled=false
api.gateway.default-filters=JwtAuthValidator
spring.application.name=device-shadow-api
spring.application.version=1.0
spring.application.servicename=device-shadow-api-int-svc
spring.application.isContextPathEnabled=false
spring.application.contextPath=""
#API-Path Config
openapi.path.include=""
openapi.path.exclude=""
########################################################
#Kafka details
########################################################
kafka.sink.topic=haa-vehicle-dev-post-alerts
kafka.broker.url=localhost:9092
kafka.acks=all
kafka.linger.ms=0
kafka.num.put.retries=4000
kafka.key.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.key.deserializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.value.deserializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.partitioner=org.apache.kafka.clients.producer.internals.DefaultPartitioner
kafka.replace.classloader=true
#set this to true if you don't want any writes to kafka. purpose is to determine time taken without kafka in the processing thread
kafka.no.puts=false
#set this to true if you want async puts. but this means no ordering guarantees
kafka.register.sync.puts=false
kafka.device.events.sync.puts=false
#use -1 to disable logging. logging can tell you how much time it takes to process x number of messages if x is given as the frequency
kafka.log.frequency=10000
#determine the key to use for kafka puts from the topic name in MQTT
kafka.record.key.start.pos=0
kafka.record.key.end.pos=6
kafka.compression.type=lz4
kafka.batch.size=0
kafka.max.block.ms=30000
kafka.max.in.flight.requests.per.connection=1
kafka.metadata.max.age.ms=60000
kafka.request.timeout.ms=30000
kafka.delivery.timeout.ms=60000
kafka.reconnect.backoff.max.ms=100000
kafka.reconnect.backoff.ms=30000
kafka.buffer.memory=524288
########################################################
#SSL Configuration
########################################################
kafka.ssl.enable=false
kafka.ssl.client.auth=required
kafka.client.keystore=/kafka/ssl/kafka.client.keystore.jks
kafka.client.keystore.password=*******
kafka.client.key.password=*******
kafka.client.truststore=/kafka/ssl/kafka.client.truststore.jks
kafka.client.truststore.password=*******
#Comma separated list of kafka brokers
bootstrap.servers=localhost:9092
########################################################
#Redis Properties
########################################################
redis.start.device.status.consumer=false
#The modes are SINGLE,REPLICA,CLUSTER,SENTINEL
redis.mode=SINGLE
#redis.single.endpoint=127.0.0.1:6379
#redis.replica.endpoints=127.0.0.1:6379,127.0.0.1:6380
#redis.cluster.endpoints=127.0.0.1:6379,127.0.0.1:6380
#redis.sentinel.endpoints=127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381
redis.master.name=mymaster
redis.master.pool.max.size=5
redis.master.idle.min=1
redis.slave.pool.max.size=5
redis.slave.idle.min=1
redis.scan.interval=2000
redis.database=0
redis.max.pool.size=5
redis.min.idle=1
redis.netty.threads=0
redis.decode.in.executor=true
########################################################
#Mongo Configuration
########################################################
mongodb.hosts=localhost
mongodb.port=27017
mongodb.username=admin
mongodb.password=password
mongodb.auth.db=admin
mongodb.name=admin
mongodb.pool.max.size=200
mongodb.max.wait.time.ms=60000
mongodb.connection.timeout.ms=60000
mongodb.socket.timeout.ms=60000
mongodb.max.connections.per.host=200
mongodb.block.threads.allowed.multiplier=10
mongodb.read.preference=primaryPreferred
morphia.map.packages=org.eclipse.ecsp.nosqldao
mongodb.server.selection.timeout=300000
messageid.generator.type=org.eclipse.ecsp.stream.base.idgen.internal.HashCodeMessageIdGenerator
mongodb.taggable.read.preference.enabled=false
mongodb.read.preference.tag=primary_region
########################################################
#Vault Configuration
########################################################
mongodb.client.cleanup.interval.ms=10000
mongodb.client.create.retry.count=3
#Assumed time interval for running threads to release the old mongo client before forced close.
mongodb.client.close.wait.interval.ms=60000
mongodb.vault.enabled=false
vault.enabled=false
secrets.vault.enabled=false
########################################################
#Application Configuration
########################################################
spring.profiles.active=test
cors.origin.allow=*
performance.monitoring.enabled=false
#RestTemplate bean creation definition is defined in both api-commons and service-commons project
#Testcases fails because spring complains of duplicating beans.We are adding this property to override the RestTemplate beans
spring.main.allow-bean-definition-overriding=true
#DeviceAssociaiton Api url is being used to call user-association api
device.association.base.url=http://internal-core-assn-elb-446884371.us-east-1.elb.amazonaws.com/vehicle-association-service/
#SaaS Api url is being used to call NotificationConfig api
saas.api.base.url=http://internal-vehicle-api-elb-int-1206001236.us-east-1.elb.amazonaws.com/sprint-dev/
#Flag to call notif config api or not
notifconfig.api.call=true
health.mqtt.monitor.enabled=false
health.mongo.monitor.enabled=true
health.kafka.consumer.group.monitor.enabled=false
health.device.status.backdoor.monitor.enabled=false
health.dff.feed.backdoor.monitor.enabled=false
health.kafka.topics.monitor.enabled=false
health.redis.monitor.enabled=true
sp.restart.on.failure=false
kafka.topics.file.path=/data/topics.txt
NEVER_BLOCK_FOR_GRAYLOG=true
processing.duration.buckets=0.05,0.1,0.2,0.3,0.4,0.7,1,2.5,5,10,60
metrics.enabled=false
metrics.prometheus.enabled=false
node.name=localhost
retry.record.id.pattern=recordIds\\\"\\:\\[
service.name=device-shadow-api