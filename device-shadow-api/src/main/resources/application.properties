#################################################################################
# /********************************************************************************
#
#  * Copyright (c) 2023-24 Harman International
#
#  *
#
#  * Licensed under the Apache License, Version 2.0 (the "License");
#
#  * you may not use this file except in compliance with the License.
#
#  * You may obtain a copy of the License at
#
#  *
#
#  *  http://www.apache.org/licenses/LICENSE-2.0
#
#  *?????
#
#  * Unless required by applicable law or agreed to in writing, software
#
#  * distributed under the License is distributed on an "AS IS" BASIS,
#
#  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#  * See the License for the specific language governing permissions and
#
#  * limitations under the License.
#
#  *
#
#  * SPDX-License-Identifier: Apache-2.0
#
#  ********************************************************************************/
#################################################################################

api.registry.enabled=true
api.security.enabled=false
api.context-path=/device-shadow
spring.application.name=device-shadow-api
spring.application.version=1.0
spring.application.servicename=device-shadow-api-int-svc
http.encoding.enabled=true
http.encoding.force=true
http.encoding.charset=UTF-8
server.port=8080
#API-Path Config
openapi.path.include="/{apiVersion}/devices/**"
#Spring mongo properties
mongodb.auth.db=admin
mongodb.name=ignite
mongodb.hosts=localhost
mongodb.port=27018
mongodb.pool.max.size=200
mongodb.max.wait.time.ms=60000
mongodb.connection.timeout.ms=60000
mongodb.socket.timeout.ms=60000
mongodb.max.connections.per.host=200
mongodb.block.threads.allowed.multiplier=10
morphia.map.packages=org.eclipse.ecsp.nosqldao
mongodb.server.selection.timeout=300000
mongodb.taggable.read.preference.enabled=false
mongodb.read.preference.tag=primary_region
mongodb.client.create.retry.count=3
mongodb.readConcernLevel=majority
mongodb.read.preference=primaryPreferred
mongodb.writeConcernLevel=majority
mongodb.writeTimeOut.seconds=5000
mongodb.writeWithJournal=true
mongodb.writeResultChecking=EXCEPTION
#Schedule time delay is in milli secs
mongodb.vault.refresh.interval.ms=1800000
mongodb.vault.lease.interval.ms=300000
mongodb.client.cleanup.interval.ms=10000
mongodb.client.close.wait.interval.ms=60000
#Shard_Key properties
mongodb.collection.shardkey.map=deviceshadow:pdid
aws.device.config.ddb.name=haa-harman-dev-deviceshadow
aws.region=us-east-1
metric.reporting.frequency.seconds=60
security.basic.enabled=false
authentication.check=false
#Keep it empty. Endpoint is required only for junit testcases
aws.dynamodb.endpoint=http://localhost:8000
tenant_env_auth_key=********
processing.duration.buckets=0.05,0.1,0.2,0.3,0.4,0.7,1,2.5,5,10,60
metrics.enabled=true
node.name=localhost
metrics.prometheus.enabled=true
service.name=device-shadow-api
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ~~~ KAFKA Properties ~~~
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Note: Below these properties are added as we added ignite-common and ignite-dao dependencies in our parent pom.xml
kafka.producer.service.enabled=false
kafka.ssl.enable=false
kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.key.deserializer=org.apache.kafka.common.serialization.StringSerializer
kafka.value.deserializer=org.apache.kafka.common.serialization.StringSerializer
#################################################################################################################
#Excluding spring auto mongo config
spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
spring.autoconfigure.exclude[1]=org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
spring.main.allow-bean-definition-overriding=true
#Usecase where we need data form DB only for greater than timestamp
fetch.data.by.timestamp.greaterThan=false